---
name: CI
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v5

      - name: ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - uses: actions/cache@v4
        name: Setup uv cache
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-uv-store-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-store-

      - run: uv sync

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.2.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> "${GITHUB_ENV}"

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: uv run task -p lint
      - run: uv run task -p test
